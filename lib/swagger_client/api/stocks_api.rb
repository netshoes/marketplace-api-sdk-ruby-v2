=begin
#API Marketplace Grupo Netshoes

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module SwaggerClient
  class StocksApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Get stock of the product
    # Returns the current stock quantity of the product.
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse2003]
    def get_stock_product_by_sku(client_id, access_token, sku, opts = {})
      data, _status_code, _headers = get_stock_product_by_sku_with_http_info(client_id, access_token, sku, opts)
      return data
    end

    # Get stock of the product
    # Returns the current stock quantity of the product.
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse2003, Fixnum, Hash)>] InlineResponse2003 data, response status code and response headers
    def get_stock_product_by_sku_with_http_info(client_id, access_token, sku, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: StocksApi.get_stock_product_by_sku ..."
      end
      # verify the required parameter 'client_id' is set
      fail ArgumentError, "Missing the required parameter 'client_id' when calling StocksApi.get_stock_product_by_sku" if client_id.nil?
      # verify the required parameter 'access_token' is set
      fail ArgumentError, "Missing the required parameter 'access_token' when calling StocksApi.get_stock_product_by_sku" if access_token.nil?
      # verify the required parameter 'sku' is set
      fail ArgumentError, "Missing the required parameter 'sku' when calling StocksApi.get_stock_product_by_sku" if sku.nil?
      # resource path
      local_var_path = "/products/{sku}/stocks".sub('{format}','json').sub('{' + 'sku' + '}', sku.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'client_id'] = client_id
      header_params[:'access_token'] = access_token

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['access_token', 'client_id']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2003')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StocksApi#get_stock_product_by_sku\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Save a newly created stock quantity of the product
    # Saves a new stock quantity of a product with no previous stock set.
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param body Json to send a stock quantity.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def save_stock_product_by_sku(client_id, access_token, sku, body, opts = {})
      save_stock_product_by_sku_with_http_info(client_id, access_token, sku, body, opts)
      return nil
    end

    # Save a newly created stock quantity of the product
    # Saves a new stock quantity of a product with no previous stock set.
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param body Json to send a stock quantity.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def save_stock_product_by_sku_with_http_info(client_id, access_token, sku, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: StocksApi.save_stock_product_by_sku ..."
      end
      # verify the required parameter 'client_id' is set
      fail ArgumentError, "Missing the required parameter 'client_id' when calling StocksApi.save_stock_product_by_sku" if client_id.nil?
      # verify the required parameter 'access_token' is set
      fail ArgumentError, "Missing the required parameter 'access_token' when calling StocksApi.save_stock_product_by_sku" if access_token.nil?
      # verify the required parameter 'sku' is set
      fail ArgumentError, "Missing the required parameter 'sku' when calling StocksApi.save_stock_product_by_sku" if sku.nil?
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling StocksApi.save_stock_product_by_sku" if body.nil?
      # resource path
      local_var_path = "/products/{sku}/stocks".sub('{format}','json').sub('{' + 'sku' + '}', sku.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'client_id'] = client_id
      header_params[:'access_token'] = access_token

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['access_token', 'client_id']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StocksApi#save_stock_product_by_sku\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update stock of the product
    # Updates the stock quantity of the product.
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param body Json to send a stock quantity.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def update_stock_product_by_sku(client_id, access_token, sku, body, opts = {})
      update_stock_product_by_sku_with_http_info(client_id, access_token, sku, body, opts)
      return nil
    end

    # Update stock of the product
    # Updates the stock quantity of the product.
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param body Json to send a stock quantity.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def update_stock_product_by_sku_with_http_info(client_id, access_token, sku, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: StocksApi.update_stock_product_by_sku ..."
      end
      # verify the required parameter 'client_id' is set
      fail ArgumentError, "Missing the required parameter 'client_id' when calling StocksApi.update_stock_product_by_sku" if client_id.nil?
      # verify the required parameter 'access_token' is set
      fail ArgumentError, "Missing the required parameter 'access_token' when calling StocksApi.update_stock_product_by_sku" if access_token.nil?
      # verify the required parameter 'sku' is set
      fail ArgumentError, "Missing the required parameter 'sku' when calling StocksApi.update_stock_product_by_sku" if sku.nil?
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling StocksApi.update_stock_product_by_sku" if body.nil?
      # resource path
      local_var_path = "/products/{sku}/stocks".sub('{format}','json').sub('{' + 'sku' + '}', sku.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'client_id'] = client_id
      header_params[:'access_token'] = access_token

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['access_token', 'client_id']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StocksApi#update_stock_product_by_sku\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
