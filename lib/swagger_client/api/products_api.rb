=begin
#API Marketplace Grupo Netshoes

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module SwaggerClient
  class ProductsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Get product by sku
    # Returns the product associated with the searched sku.
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param [Hash] opts the optional parameters
    # @option opts [String] :expands Expand response relationships, for instance if you need to access product images use &#39;images&#39;, to access product attributes use &#39;attributes&#39; and to access images and attributes use &#39;images,attributes&#39;.
    # @return [InlineResponse200Items]
    def get_product_by_sku(client_id, access_token, sku, opts = {})
      data, _status_code, _headers = get_product_by_sku_with_http_info(client_id, access_token, sku, opts)
      return data
    end

    # Get product by sku
    # Returns the product associated with the searched sku.
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param [Hash] opts the optional parameters
    # @option opts [String] :expands Expand response relationships, for instance if you need to access product images use &#39;images&#39;, to access product attributes use &#39;attributes&#39; and to access images and attributes use &#39;images,attributes&#39;.
    # @return [Array<(InlineResponse200Items, Fixnum, Hash)>] InlineResponse200Items data, response status code and response headers
    def get_product_by_sku_with_http_info(client_id, access_token, sku, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ProductsApi.get_product_by_sku ..."
      end
      # verify the required parameter 'client_id' is set
      fail ArgumentError, "Missing the required parameter 'client_id' when calling ProductsApi.get_product_by_sku" if client_id.nil?
      # verify the required parameter 'access_token' is set
      fail ArgumentError, "Missing the required parameter 'access_token' when calling ProductsApi.get_product_by_sku" if access_token.nil?
      # verify the required parameter 'sku' is set
      fail ArgumentError, "Missing the required parameter 'sku' when calling ProductsApi.get_product_by_sku" if sku.nil?
      # resource path
      local_var_path = "/products/{sku}".sub('{format}','json').sub('{' + 'sku' + '}', sku.to_s)

      # query parameters
      query_params = {}
      query_params[:'expands'] = opts[:'expands'] if !opts[:'expands'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'client_id'] = client_id
      header_params[:'access_token'] = access_token

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['access_token', 'client_id']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse200Items')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductsApi#get_product_by_sku\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get list of products
    # Returns all products associated to the seller.
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page Number of the page in pagination. The starting page number is zero. (default to 0)
    # @option opts [Integer] :size Define the size of the returned list of products. (default to 20)
    # @option opts [String] :expands Expand response relationships, for instance if you need to access product images use &#39;images&#39;, to access product attributes use &#39;attributes&#39; and to access images and attributes use &#39;images,attributes&#39;.
    # @return [InlineResponse200]
    def get_products(client_id, access_token, opts = {})
      data, _status_code, _headers = get_products_with_http_info(client_id, access_token, opts)
      return data
    end

    # Get list of products
    # Returns all products associated to the seller.
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page Number of the page in pagination. The starting page number is zero.
    # @option opts [Integer] :size Define the size of the returned list of products.
    # @option opts [String] :expands Expand response relationships, for instance if you need to access product images use &#39;images&#39;, to access product attributes use &#39;attributes&#39; and to access images and attributes use &#39;images,attributes&#39;.
    # @return [Array<(InlineResponse200, Fixnum, Hash)>] InlineResponse200 data, response status code and response headers
    def get_products_with_http_info(client_id, access_token, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ProductsApi.get_products ..."
      end
      # verify the required parameter 'client_id' is set
      fail ArgumentError, "Missing the required parameter 'client_id' when calling ProductsApi.get_products" if client_id.nil?
      # verify the required parameter 'access_token' is set
      fail ArgumentError, "Missing the required parameter 'access_token' when calling ProductsApi.get_products" if access_token.nil?
      # resource path
      local_var_path = "/products".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'size'] = opts[:'size'] if !opts[:'size'].nil?
      query_params[:'expands'] = opts[:'expands'] if !opts[:'expands'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'client_id'] = client_id
      header_params[:'access_token'] = access_token

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['access_token', 'client_id']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse200')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductsApi#get_products\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get product status
    # Returns the current status of a product.
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse2001]
    def get_status_product_by_sku(client_id, access_token, sku, opts = {})
      data, _status_code, _headers = get_status_product_by_sku_with_http_info(client_id, access_token, sku, opts)
      return data
    end

    # Get product status
    # Returns the current status of a product.
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse2001, Fixnum, Hash)>] InlineResponse2001 data, response status code and response headers
    def get_status_product_by_sku_with_http_info(client_id, access_token, sku, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ProductsApi.get_status_product_by_sku ..."
      end
      # verify the required parameter 'client_id' is set
      fail ArgumentError, "Missing the required parameter 'client_id' when calling ProductsApi.get_status_product_by_sku" if client_id.nil?
      # verify the required parameter 'access_token' is set
      fail ArgumentError, "Missing the required parameter 'access_token' when calling ProductsApi.get_status_product_by_sku" if access_token.nil?
      # verify the required parameter 'sku' is set
      fail ArgumentError, "Missing the required parameter 'sku' when calling ProductsApi.get_status_product_by_sku" if sku.nil?
      # resource path
      local_var_path = "/products/{sku}/status".sub('{format}','json').sub('{' + 'sku' + '}', sku.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'client_id'] = client_id
      header_params[:'access_token'] = access_token

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['access_token', 'client_id']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2001')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductsApi#get_status_product_by_sku\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a new product.
    # Creates a new product. Cannot set flavor and color on the same product
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param body Product json to create a new product.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def save_product(client_id, access_token, body, opts = {})
      save_product_with_http_info(client_id, access_token, body, opts)
      return nil
    end

    # Create a new product.
    # Creates a new product. Cannot set flavor and color on the same product
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param body Product json to create a new product.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def save_product_with_http_info(client_id, access_token, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ProductsApi.save_product ..."
      end
      # verify the required parameter 'client_id' is set
      fail ArgumentError, "Missing the required parameter 'client_id' when calling ProductsApi.save_product" if client_id.nil?
      # verify the required parameter 'access_token' is set
      fail ArgumentError, "Missing the required parameter 'access_token' when calling ProductsApi.save_product" if access_token.nil?
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling ProductsApi.save_product" if body.nil?
      # resource path
      local_var_path = "/products".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'client_id'] = client_id
      header_params[:'access_token'] = access_token

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['access_token', 'client_id']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductsApi#save_product\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a product.
    # Updates a product. Cannot set flavor and color on the same product
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param body Product json to create a new product.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def update_product(client_id, access_token, sku, body, opts = {})
      update_product_with_http_info(client_id, access_token, sku, body, opts)
      return nil
    end

    # Update a product.
    # Updates a product. Cannot set flavor and color on the same product
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param body Product json to create a new product.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def update_product_with_http_info(client_id, access_token, sku, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ProductsApi.update_product ..."
      end
      # verify the required parameter 'client_id' is set
      fail ArgumentError, "Missing the required parameter 'client_id' when calling ProductsApi.update_product" if client_id.nil?
      # verify the required parameter 'access_token' is set
      fail ArgumentError, "Missing the required parameter 'access_token' when calling ProductsApi.update_product" if access_token.nil?
      # verify the required parameter 'sku' is set
      fail ArgumentError, "Missing the required parameter 'sku' when calling ProductsApi.update_product" if sku.nil?
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling ProductsApi.update_product" if body.nil?
      # resource path
      local_var_path = "/products/{sku}".sub('{format}','json').sub('{' + 'sku' + '}', sku.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'client_id'] = client_id
      header_params[:'access_token'] = access_token

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['access_token', 'client_id']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductsApi#update_product\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update product status. Only sandbox
    # Update product status for Sandbox operations
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param body Json to update status.
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse2001]
    def update_product_status_by_sku(client_id, access_token, sku, body, opts = {})
      data, _status_code, _headers = update_product_status_by_sku_with_http_info(client_id, access_token, sku, body, opts)
      return data
    end

    # Update product status. Only sandbox
    # Update product status for Sandbox operations
    # @param client_id The APP Token used to authenticate.
    # @param access_token The Access Token used to authenticate.
    # @param sku Product&#39;s Sku
    # @param body Json to update status.
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse2001, Fixnum, Hash)>] InlineResponse2001 data, response status code and response headers
    def update_product_status_by_sku_with_http_info(client_id, access_token, sku, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ProductsApi.update_product_status_by_sku ..."
      end
      # verify the required parameter 'client_id' is set
      fail ArgumentError, "Missing the required parameter 'client_id' when calling ProductsApi.update_product_status_by_sku" if client_id.nil?
      # verify the required parameter 'access_token' is set
      fail ArgumentError, "Missing the required parameter 'access_token' when calling ProductsApi.update_product_status_by_sku" if access_token.nil?
      # verify the required parameter 'sku' is set
      fail ArgumentError, "Missing the required parameter 'sku' when calling ProductsApi.update_product_status_by_sku" if sku.nil?
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling ProductsApi.update_product_status_by_sku" if body.nil?
      # resource path
      local_var_path = "/products/{sku}/status".sub('{format}','json').sub('{' + 'sku' + '}', sku.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'client_id'] = client_id
      header_params[:'access_token'] = access_token

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['access_token', 'client_id']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2001')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductsApi#update_product_status_by_sku\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
